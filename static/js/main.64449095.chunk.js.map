{"version":3,"sources":["scss/components/food.module.scss","assets/images/cat.png","fonts/Exo-Thin.otf","redux/meal-reducer.js","redux/redux-store.js","components/Food/Food.jsx","components/Food/FoodContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","SET_SELECTED","SET_HOVERED","initialState","food","id","name","portionCount","mouseCount","weigth","description","inStock","selected","hovered","mealReducer","state","action","type","map","f","reducers","combineReducers","meal","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleWare","__store__","Food","props","index","onMouseEnter","setHovered","onMouseLeave","onClick","setSelected","key","className","cn","classes","disable","select","food_container","food_head","hover","count","circle","src","cat","alt","href","dis_description","mainPage","cover","back","gradient","head","FoodContainer","this","React","Component","connect","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.64449095.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainPage\":\"food_mainPage__35Iun\",\"back\":\"food_back__QJxDK\",\"gradient\":\"food_gradient__1IOgV\",\"head\":\"food_head__3iz0k\",\"meal\":\"food_meal__3r8va\",\"food\":\"food_food__3Dugh\",\"select\":\"food_select__Q33gV\",\"food_container\":\"food_food_container__1FKja\",\"count\":\"food_count__IrNeY\",\"circle\":\"food_circle__2mXbZ\",\"weigth\":\"food_weigth__1Boq2\",\"disable\":\"food_disable__3ujCF\",\"food_head\":\"food_food_head__3ISCV\",\"hover\":\"food_hover__MrqWA\",\"description\":\"food_description__3l-VS\",\"dis_description\":\"food_dis_description__2aGq0\"};","module.exports = __webpack_public_path__ + \"static/media/cat.4b9ef23f.png\";","module.exports = __webpack_public_path__ + \"static/media/Exo-Thin.44bde874.otf\";","const SET_SELECTED = 'test-project/selected/SET_SELECTED';\r\nconst SET_HOVERED = 'test-project/selected/SET_HOVERED';\r\n\r\n\r\nlet initialState = {\r\n    food: [\r\n        {\r\n            id: 1,\r\n            name: 'фуа-гра',\r\n            portionCount: 10,\r\n            mouseCount: 'мышь',\r\n            weigth: '0,5',\r\n            description: 'Печень утки разварная с артишоками.',\r\n            inStock: true,\r\n            selected: false,\r\n            hovered: false\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'рыбой',\r\n            portionCount: 40,\r\n            mouseCount: '2 мыши',\r\n            weigth: '2',\r\n            description: 'Головы щучьи с чесноком да свежайшая сёмгушка.',\r\n            inStock: true,\r\n            selected: false,\r\n            hovered: false\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'курой',\r\n            portionCount: 100,\r\n            mouseCount: '2 мыши',\r\n            weigth: '5',\r\n            description: 'Филе из цыплят с трюфелями в бульоне.',\r\n            inStock: false,\r\n            selected: false,\r\n            hovered: false\r\n        }\r\n    ]\r\n}\r\n\r\nconst mealReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_SELECTED:\r\n            return {\r\n                ...state,\r\n                food: state.food.map(f => {\r\n                    if (f.id === action.id) return { ...f, selected: !f.selected }\r\n\r\n                    return f\r\n                })\r\n            }\r\n        case SET_HOVERED:\r\n            return {\r\n                ...state,\r\n                food: state.food.map(f => {\r\n                    if (f.id === action.id && f.selected) return { ...f, hovered: action.hovered }\r\n\r\n                    return f\r\n                })\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setSelected = (id) => ({ type: SET_SELECTED, id });\r\nexport const setHovered = (id, hovered) => ({ type: SET_HOVERED, id, hovered });\r\n\r\n\r\n\r\n\r\nexport default mealReducer;","import thunkMiddleWare from 'redux-thunk';\r\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport mealReducer from './meal-reducer';\r\n\r\n\r\n\r\nlet reducers = combineReducers({\r\n    meal: mealReducer,\r\n}\r\n);\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleWare)));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport cn from 'classnames'\r\n\r\nimport classes from './../../scss/components/food.module.scss'\r\n\r\nimport cat from './../../assets/images/cat.png'\r\n\r\n\r\nconst Food = (props) => {\r\n\r\n    let food = props.meal.food.map((f, index) => <div onMouseEnter={() => props.setHovered(f.id, true)}\r\n        onMouseLeave={() => props.setHovered(f.id, false)} onClick={() => f.inStock && props.setSelected(f.id)} key={`${f}_${index}`}\r\n        className={cn(classes.food,\r\n            {[classes.disable]: f.inStock === false,\r\n                [classes.select]: f.selected === true\r\n            })}>\r\n        <div className={classes.food_container}>\r\n            <div className={classes.food_head}>\r\n                <p className={f.selected && f.hovered ? classes.hover : ''}>{f.selected && f.hovered ? 'Котэ не одобряет?' : 'Сказочное заморское'}</p>\r\n                <h1>Нямушка</h1>\r\n                <h2>с {f.name}</h2>\r\n                <p>{f.portionCount} порций {f.mouseCount} в подарок</p>\r\n            </div>\r\n            <div className={classes.count}>\r\n                <div className={classes.circle}>\r\n                    <div className={classes.weigth}>\r\n                        <h1>{f.weigth}</h1>\r\n                        <h2>кг</h2>\r\n                    </div>\r\n                </div>\r\n                <img src={cat} alt=\"\" />\r\n            </div>\r\n        </div>\r\n        <div className={classes.description}>\r\n            {!f.inStock ? <p className={classes.dis_description}>Печалька, с {f.name} закончился.</p> : f.selected ? <p>{f.description}</p> : <p>Чего сидишь? Порадуй котэ, <a href=\"#s\">купи</a></p>}\r\n        </div>\r\n    </div>)\r\n\r\n    return <div className={classes.mainPage} id={classes.cover}>\r\n        <div className={classes.back}>\r\n            <div className={classes.gradient}>\r\n\r\n            </div>\r\n        </div>\r\n        <div className={classes.head}>\r\n            <h1>Ты сегодня покормил кота?</h1>\r\n        </div>\r\n        <div className={classes.meal}>\r\n            {food}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Food;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setSelected, setHovered } from '../../redux/meal-reducer';\r\n\r\nimport Food from './Food';\r\n\r\nclass FoodContainer extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <Food meal={this.props.meal} setSelected={this.props.setSelected} setHovered={this.props.setHovered}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        meal: state.meal,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {setSelected, setHovered})(FoodContainer);","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from './redux/redux-store';\n\nimport './../src/scss/components/common.scss'\n\nimport FoodContainer from './components/Food/FoodContainer';\n\nfunction App() {\n  return <Provider store ={store}>\n    <FoodContainer />\n  </Provider>\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './fonts/Exo-Thin.otf'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}